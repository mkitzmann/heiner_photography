<?php
namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Response;
use App\Entity\Photo;
use App\Form\PhotoType;

class PhotoController extends Controller
{
    public function new(Request $request)
    {
        $em = $this->getDoctrine()->getManager();

        $photo = new Photo();
        $form = $this->createForm(PhotoType::class, $photo);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            var_dump($photo);
            // $file stores the uploaded Image file
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $photo->getImage();


            //$title = $request[request[photo[$description]]];;

            //$description = $photo->getDescription();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            // moves the file to the directory where photos are stored
            $file->move(
                $this->getParameter('photo_directory'),
                $fileName
            );


            // updates the 'image' property to store the image file name
            // instead of its contents
            $photo->setImage($fileName);
            //$photo->setTitle($title);
            //$photo->setDescription($description);

            // ... persist the $photo variable or any other work
            $em->persist($photo);

            // actually executes the queries (i.e. the INSERT query)
            $em->flush();

            return $this->redirect($this->generateUrl('GalleryRoute'));
        }

        return $this->render('admin/adminPhotos.html.twig', array(
            'form' => $form->createView(),
        ));
    }
    
    public function GalleryAction(Request $request, string $projectTitle)
    {
        return $this->render('home/gallery.html.twig',[
            'projectTitle' => $projectTitle
        ]);
    }

    /**
     * @return string
     */
    public function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}