* {
  text-decoration: none;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

html,
body {
  background: white;
  height: 100%;
  overflow: hidden;
  padding: 0;
  margin: 0;
  list-style-type: none;
  text-decoration: none;
  font-family: "TSTAR-Regular", sans-serif;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.global {
  display: flex;
  height: 100%;
  width: 100%;
  display: -ms-flexbox;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-box;
  box-orient: horizontal;
  overflow: hidden;
}

.sidebar {
  position: fixed;
  height: 100vh;
  width: 15vw;
  display: flex;
  align-items: center;
  padding-left: 3vw;
  background: #fff;
}

.sideinfo {
  position: absolute;
  margin-top: 250px;
}

.sideinfo a {
  color: #ccc;
}

.nc-icon-wrapper {
  fill: #ccc;
}

.content {
  margin-left: 18vw;
  margin-right: 3vw;
  max-height: 100%;
  overflow: auto;
  -ms-flex: 1;
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -ms-box-flex: 1;
  box-flex: 1;
  display: flex;
  align-content: center;
}

@media all and (max-width: 1100px) and (orientation: landscape) {
  .content {
    margin-left: 28vw;
  }
}

.content#single {
  padding: 4vh 0;
  justify-content: center;
  max-width: 1000px;
}

.content#single img {
  zoom: 1;
}

.content#overview {
  align-items: center;
}

.container#overview {
  position: relative;
  width: 1000px;
  text-align: left;
  columns: 200px 3;
  column-gap: 1rem;
}

.project-wrapper {
  display: inline;
  height: 100%;
}

.project-wrapper img {
  max-width: 100%;
  max-height: 100%;
  margin: 1rem 0 0 0;
  zoom: 2;
}

.container#single {
  position: relative;
  display: flex;
  text-align: center;
}

.container#single img {
  display: block;
  align-self: center;
}

img.fadein {
  -webkit-animation: fadein 2s;
  /* Safari, Chrome and Opera > 12.1 */
  -moz-animation: fadein 2s;
  /* Firefox < 16 */
  -ms-animation: fadein 2s;
  /* Internet Explorer */
  -o-animation: fadein 2s;
  /* Opera < 12.1 */
  animation: fadein 2s;
}

img.fullsize {
  padding: 0px;
  max-width: 100%;
  max-height: 100%;
}

/*
* === FORMS ===
*/

/* Bordered form */

form {
  width: 20em;
}

/* Full-width inputs */

input[type=text],
input[type=password],
input[type=file] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  box-sizing: border-box;
}

/* Set a style for all buttons */

button.btn-full-width {
  background-color: #ccc;
  font-size: 0.8em;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  cursor: pointer;
  width: 100%;
}

/* Add a hover effect for buttons */

button:hover {
  opacity: 0.8;
}

/* Extra style for the cancel button (red) */

.cancelbtn {
  width: auto;
  padding: 10px 18px;
  background-color: #f44336;
}

.error {
  color: red;
}

h1 {
  font-size: 1em;
  margin-bottom: 2em;
}

/*
* === GALLERY ===
*/

a.gallery-next {
  position: absolute;
  width: 50%;
  height: 100%;
  right: 0px;
  cursor: e-resize;
  z-index: 1;
}

a.gallery-prev {
  position: absolute;
  width: 50%;
  left: 0px;
  height: 100%;
  cursor: w-resize;
  z-index: 1;
}

/*
* === NAVIGATION ===
*/

.logo {
  height: 1.2rem;
}

span.bold {
  font-family: "TSTAR-Bold", sans-serif;
}

nav {
  font-weight: 200;
  margin-top: 50px;
  z-index: 0;
  font-size: 0.9rem;
}

nav a {
  color: #000;
  display: block;
  padding-bottom: 1rem;
}

nav a.active {
  text-shadow: 0 0 0 #000;
}

nav a:hover {
  color: #ccc;
}

/*
* === OVERLAY ===
*/

.overlay {
  position: absolute;
  height: 100%;
  display: flex;
  align-items: center;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.8);
  transition: opacity 1000ms;
  visibility: hidden;
  opacity: 0;
  z-index: 2;
}

.overlay:target {
  visibility: visible;
  opacity: 1;
  z-index: 2;
}

.popup {
  margin: 0 auto;
  padding: 20px;
  background: #fff;
  width: 40vw;
  position: relative;
  transition: all 2s ease-in-out;
  font-family: "TSTAR-Regular", sans-serif;
  -webkit-box-shadow: 0px 0px 60px 2px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0px 0px 60px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0px 0px 60px 2px rgba(0, 0, 0, 0.2);
  z-index: 21;
  border: 1px solid #aaa;
}

.popup h2 {
  margin: 0 0 10px 0;
  color: #333;
  font-family: "TSTAR-Bold", sans-serif;
  font-size: 1.0em;
}

.popup h3 {
  margin-top: 0;
  color: #333;
  font-weight: 400;
  font-size: 1em;
}

.overlay .close-overlay {
  position: absolute;
  top: 10px;
  right: 15px;
  width: 100%;
  height: 100%;
  cursor: alias;
}

.popup .close {
  position: absolute;
  top: 10px;
  right: 15px;
  transition: all 200ms;
  font-size: 1.5em;
  text-decoration: none;
  color: #333;
}

.popup .close:hover {
  color: #999;
}

.popup .popup-content {
  max-height: 30%;
  overflow: auto;
  font-weight: 200;
  font-size: 1em;
}

.popup .popup-price {
  width: 100%;
  margin: 30px 0;
  max-height: 30%;
  overflow: auto;
  font-weight: 400;
  font-size: 1em;
}

.popup .popup-price div.right {
  margin: 10px 0;
  width: 100%;
  text-align: left;
}

.popup-copyright {
  font-size: 0.8em;
  color: #ccc;
}

/*
* === MEDIA QUERIES ===
*/

@media all and (orientation: portrait) {
  .sidebar {
    height: 20vh;
    width: 100vw;
    padding-left: 8vw;
    padding-top: 3vh;
    z-index: 1;
  }

  .content {
    margin: 20vh 0 10vh 0;
  }

  .content#overview {
    margin-top: 150px;
  }

  .container#single {
    text-align: center;
    padding-left: 8vw;
    padding-right: 8vw;
  }

  .container#overview {
    width: 100vw;
    text-align: left;
    padding-left: 8vw;
    padding-right: 8vw;
  }

  .sideinfo {
    position: fixed;
    bottom: 3vh;
  }

  nav {
    margin-top: 20px;
  }

  nav a:last-child {
    padding-bottom: 0;
  }
}

@media all and (max-width: 500px) and (orientation: portrait) {
  .content#overview {
    align-items: flex-start;
    margin-top: 22vh;
  }

  .popup {
    width: 100vw;
    margin: 0 4vw;
  }
}

@media all and (max-height: 780px) and (orientation: portrait) {
  .content#overview {
    align-items: flex-start;
  }
}

@media all and (max-width: 930px) and (orientation: landscape) {
  .content#overview {
    align-items: flex-start;
    padding-top: 3vh;
  }

  .popup {
    margin: 10vh auto;
    width: 80vw;
  }
}

@media all and (max-height: 618px) and (max-width: 1223px) and (orientation: landscape) {
  .content#overview {
    align-items: flex-start;
    padding-top: 3vh;
  }
}

@media all and (max-height: 618px) and (orientation: landscape) {
  .sideinfo {
    bottom: 50px;
  }

  .sidebar {
    align-items: flex-start;
    padding-top: 50px;
  }

  .content#overview {
    padding-top: 3vh;
    margin-right: 0px;
    padding-right: 1vw;
  }
}

/*
* === ANIMATIONS ===
*/

@keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Firefox < 16 */

@-moz-keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Safari, Chrome and Opera > 12.1 */

@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Internet Explorer */

@-ms-keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

/* Opera < 12.1 */

@-o-keyframes fadein {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}


.overview-wrapper {
    display: flex;
    flex-flow: row wrap;
}
.container#overviewContainer{
    margin: 0 3vw;
}
.overviewImageContainer {
    display: inline-block;
    position: relative;
    margin: 0 3px;
}
.add-project-wrapper {
    display: flex;
    flex-flow: column wrap;
    width: 300px;
    height: 200px;
    background-color: #eee;
    align-content: center;
    justify-content: center;
    font-size: 6em;
    font-weight: 300;
    text-align: center;
    box-shadow: inset 0 0 40px #ddd;
    color: #ccc;
    margin: 0px;
    padding: 0px;
}
.add-project-link{
    color: #bbb;
}


.overviewImageMask {
    display: flex;
    flex-flow: column nowrap;
    align-content: center;
    justify-content: center;
    width: 300px;
    height: 200px;
    overflow: hidden;
    margin: 4px 0;
}
.overviewImage {
    width: 100%;
}
.hovertext{
    opacity: 0;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
}
.overviewImageContainer:hover .hovertext{
    opacity: 1;
    transition: opacity .6s ease;
}
.icon{
    width: 3em;
    margin:0 1.5em;
}
.overviewImageContainer:hover .handle {
    opacity: 1;
    transition: opacity .6s ease;
}
.handle {
    z-index: 100;
    opacity: 0;
    width: 1.4em;
    position: absolute;
    margin: 0.5em;
    cursor: move;
    cursor: -webkit-grabbing;
}

.modal-mask {
    position: fixed;
    z-index: 9998;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, .7);
    display: flex;
    box-orient: horizontal;
    flex-flow: column nowrap;
    align-content: center;
    justify-content: center;
    transition: opacity .6s ease;
}
.modal-wrapper {
    display: flex;
}
.modal-container {
    margin: 0px auto;
    padding: 20px 30px;
    background-color: #fff;
    box-shadow: 0 2px 8px rgba(0, 0, 0, .33);
    transition: all .6s ease;
    font-family: Helvetica, Arial, sans-serif;
}
.modal-header h3 {
    margin-top: 0;
    color: #000;
    max-width: 100%;
}
.modal-body {
    margin: 20px 0;
}
.modal-default-button {
    background-color: #ccc;
    font-size: 0.8em;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    cursor: pointer;
}
.modal-delete-button {
    background-color: #d54;
}


/*
 * The following styles are auto-applied to elements with
 * transition="modal" when their visibility is toggled
 * by Vue.js.
 *
 * You can easily play with the modal transition by editing
 * these styles.
 */
.modal-enter {
    opacity: 0;
}
.modal-leave-active {
    opacity: 0;
}
.modal-enter .modal-container,
.modal-leave-active .modal-container {
    -webkit-transform: scale(1.0);
    transform: scale(1.0);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/